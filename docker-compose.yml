version: "3.9"

networks:
  my-simple-network:
    driver: bridge

services:
  # https://hub.docker.com/_/zookeeper
  # https://hub.docker.com/r/bitnami/zookeeper
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.8.0
    #hostname: zoo1
    ports:
      - "2181:2181"
    networks:
      - my-simple-network
    restart: always

  # https://hub.docker.com/r/bitnami/kafka
  # create cluster build from three brokers
  kafka1:
    container_name: kafka1
    #hostname: kafka1
    build: ./kafka-broker
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka1:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
    depends_on:
      - zookeeper
    restart: always
    networks:
      - my-simple-network
#    volumes:
#      - ./kafka-broker/kafka-volume:/bitnami/kafka

  kafka2:
    container_name: kafka2
    build: ./kafka-broker
    ports:
      - "9091:9092"
      - "9094:9094"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka2:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
    depends_on:
      - zookeeper
    restart: always
    networks:
      - my-simple-network


  kafka3:
    container_name: kafka3
    build: ./kafka-broker
    ports:
      - "9090:9092"
      - "9095:9095"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka3:9092,EXTERNAL://localhost:9095
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
    depends_on:
      - zookeeper
    restart: always
    networks:
      - my-simple-network


  db:
    container_name: KessengerDB
    build: ./db
    # image: postgres:14.2
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: passw
      POSTGRES_DB: kessenger_schema
    networks:
      - my-simple-network
    ports:
      - '5438:5432'


  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.10
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    networks:
      - my-simple-network
    restart: unless-stopped
    logging:
      driver: "none"


  # Kafka streams chat Analyser
  kafka_streams:
    container_name: kafka_streams_chat_analyser
    build: ./KafkaStreamsChatAnalyser    # KafkaStreamsChatAnalyser is folder where Dockerfile can be found
    ports:
      - "8081:8080"
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    restart: always
    networks:
      - my-simple-network
