# https://www.playframework.com/documentation/latest/Configuration

#play.modules.enabled+="modules.MyModule"

play.modules.enabled+="modules.KessengerConfModule"

kessenger.webapp.server="http://localhost:4200"

kessenger.util.passwordconverter.salt="$2a$10$8K1p/a0dL1LXMIgoEDFrwO"

kessenger.kafka.broker.bootstrap_servers="localhost:9093,localhost:9094"

kessenger.kafka.broker.topics.chat.replication=2
kessenger.kafka.broker.topics.chat.partition_num=1
kessenger.kafka.user.serializer="io.github.malyszaryczlowiek.kessengerlibrary.serdes.user.UserSerializer"
kessenger.kafka.user.deserializer="io.github.malyszaryczlowiek.kessengerlibrary.serdes.user.UserDeserializer"
kessenger.kafka.chat.serializer="io.github.malyszaryczlowiek.kessengerlibrary.serdes.message.MessageSerializer"
kessenger.kafka.chat.deserializer="io.github.malyszaryczlowiek.kessengerlibrary.serdes.message.MessageDeserializer"

kessenger.kafka.broker.topics.joining.replication=2
kessenger.kafka.broker.topics.joining.partition_num=1
kessenger.kafka.joining.serializer="io.github.malyszaryczlowiek.kessengerlibrary.serdes.invitation.InvitationSerializer"
kessenger.kafka.joining.deserializer="io.github.malyszaryczlowiek.kessengerlibrary.serdes.invitation.InvitationDeserializer"

kessenger.kafka.broker.topics.writing.replication=2
kessenger.kafka.broker.topics.writing.partition_num=1
kessenger.kafka.writing.serializer="io.github.malyszaryczlowiek.kessengerlibrary.serdes.writing.WritingSerializer"
kessenger.kafka.writing.deserializer="io.github.malyszaryczlowiek.kessengerlibrary.serdes.writing.WritingDeserializer"


# Default database configuration
db.default.url="jdbc:postgresql://localhost:5438/kessenger_schema"
db.default.driver=org.postgresql.Driver
db.default.username=admin
db.default.password="passw"
db.default.logSql=false

# db.default.hikaricp.maximumPoolSize = 10

# db connections = ((physical_core_count * 2) + effective_spindle_count)
fixedConnectionPool = 32

database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}


kafka.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}



my.executor {
  type = Dispatcher
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = 32
  }
}


# CORS
play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.cors {
  # allowedOrigins = ["http://localhost:4200"]
  allowedOrigins = [${kessenger.webapp.server}]
}

# WEBSOCKET
# play.server.websocket.idleTimeout=900s
# play.server.websocket.periodic-keep-alive-max-idle = 10 seconds


# my filters
play.filters.enabled += "filters.KsidFilter"
# play.filters.enabled += "filters.WebSocketFilter"











# dodać filter który jak mamy origin localhost:4200 dodaje nagłówek odpowiedzi (response header)




# play.filters.hosts {
#   # Allow requests to example.com, its subdomains, and localhost:9000.
#   allowed = ["http://localhost:4200", "localhost:4200", "localhost:9000"]
#   allowedOrigins = ["http://localhost:4200", "localhost:4200", "localhost:9000"]
# }
# play.filters.csrf {
#   allowed = ["http://localhost:4200", "localhost:4200", "localhost:9000"]
#   allowedOrigins = ["http://localhost:4200", "localhost:4200", "localhost:9000"]
# }
# play.filters.security {
#   # Allow requests to example.com, its subdomains, and localhost:9000.
#   allowed = ["http://localhost:4200", "localhost:4200", "localhost:9000"]
#   allowedOrigins = ["http://localhost:4200", "localhost:4200", "localhost:9000"]
# }